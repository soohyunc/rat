Use of the message bus by RAT
=============================

$Revision$
$Date$

This document documents the message bus commands known by RAT. It does not
define the mbus transport mechanism, that is defined in a companion document
draft-ietf-mmusic-mbus-transport-01.txt (see http://www.mbus.org/ for any
future updates to that document).

The UCL common multimedia library contains an implementation of the message
bus which is intended to be relatively simple to build standalone and may
be of interest to those wishing to interface with RAT in this manner. This
should have been supplied along with the RAT source code, but can also be
retrieved from http://www-mice.cs.ucl.ac.uk/multimedia/software/

The message bus is the sole means by which the RAT media engine communicates
with the user interface. This allows for replacement of the UI and for remote
control of the media engine.

TODO: insert description of the startup sequence, showing how to spawn the
media engine, user interface, etc.

TODO: synchronization between UI and media engine

Quick roadmap of the mbus related code in rat:
	- mbus_*.c		reception of messages
	- ui_send_*.c		sends messages from the media engine to the UI
	- ui_audiotool.tcl	sends messages from the UI to the media engine
				also handles processing of most of the messages
				received by the UI
the common library include mbus related code to actually send and receive
the mbus packets.

-------------------------------------------------------------------------------
--- The mbus.* commands provide synchronization and coordination between    ---
--- processes at a high level.                                              ---

mbus.hello ()

	Sent as a heartbeat message every second to indicate liveness.

mbus.quit ()

	Sent to indicate that the receiving entity should quit.

mbus.bye()

	Sent to indicate that the sender is about to exit. Should be the
	last message sent by an entity.

mbus.waiting (condition)
mbus.go (condition)

	An mbus.waiting command indicates that the sender is waiting for
	the specified condition to be fulfilled. An mbus.go command is sent
	to inform such a waiting entity that that condition has been met.

-------------------------------------------------------------------------------
--- The rtp.* commands have two purposes. Firstly, they are sent from the   ---
--- media engine to the user interface to inform the UI of the participants ---
--- in a session. Secondly, they can be used to control some aspects of the ---
--- transmission of RTP packets by the media engine (e.g. the SDES details) ---

rtp.query ()

	Sent to the media engine to request an update of the current state
	of the RTP session. 

rtp.addr (addr rx_port tx_port ttl)

	This can be sent to the media engine on startup to set the
	addresses used, thereafter it is sent by the media engine as part
	of the response to rtp.query() to inform the recipient of the
	addresses used for the session.

rtp.ssrc (my_ssrc)

	Inform the recipient of the SSRC the sender is using in the
	session. Again, sent in response the rtp.query().

rtp.source.cname (ssrc name)
rtp.source.name  (ssrc name)
rtp.source.email (ssrc email)
rtp.source.phone (ssrc phone)
rtp.source.loc   (ssrc location)
rtp.source.tool  (ssrc tool)
rtp.source.note  (ssrc note)

	Convey RTP SDES information about a source. Can be sent to the
	media engine to set the SDES information it includes in its RTCP
	packets - in which case the ssrc used must be that from the
	rtp.ssrc() message.

rtp.source.mute (cname mute)

	The specified source should be muted (if mute == 1) or unmuted (if
	mute == 0).

rtp.source.codec (cname codec)

	Convey codec being used by this source.

rtp.source.packet.duration (cname duration)

	Convey the duration of audio packets received from this source.

rtp.source.packet.loss (dest srce loss)

	Convey the percentage packet loss between two participants.

rtp.source.reception (cname packets_recv packets_lost packets_mis o packets_dup jitter jit_tog)

	Convey RTCP reception report statistics.

rtp.source.active   (cname)
rtp.source.inactive (cname)

	Indicate that the specified source is active/inactive now.

rtp.source.exists (cname)

	Indicate to the receiver that the participant with the specified
	is present in the session.

rtp.source.remove (cname)

	The specified source should be remove from the list of
	participants.

rtp.source.gain (ssrc gain)
rtp.source.rtt (ssrc rtt)

rtp.source.playout (cname playout-delay)

	Convey playout delay being used for this source.

-------------------------------------------------------------------------------

audio.input.mute (boolean)
audio.input.gain (percentage)
audio.input.ports.flush ()
audio.input.ports.add (port)
audio.input.port (port)
audio.input.powermeter (percentage)

audio.output.mute (boolean)
audio.output.gain (percentage)
audio.output.ports.flush ()
audio.output.ports.add (port)
audio.output.port (port)
audio.output.powermeter (percentage)

audio.channel.coding (coding)
audio.channel.repair (repair)

audio.devices.flush ()
audio.devices.add (device)
audio.device (device)
audio.query ()

audio.file.play.open   
audio.file.play.pause
audio.file.play.stop
audio.file.play.live
audio.file.play.ready
audio.file.play.alive

	Control the playback of audio files into a session.

audio.file.record.open
audio.file.record.pause
audio.file.record.stop
audio.file.record.live
audio.file.record.ready
audio.file.record.alive

	Control the recording of the audio from a session into a file.

audio.suppress.silence (boolean)


audio.3d.filter.types 
audio.3d.filter.lengths
audio.3d.azimuth.min
audio.3d.azimuth.max
audio.3d.enabled
audio.3d.user.settings

-------------------------------------------------------------------------------
security.encryption.key (key)

	Enable DES encryption with the specified key.

-------------------------------------------------------------------------------
session.title (title)

	Indicates the title of this session.

-------------------------------------------------------------------------------

tool.rat.agc
tool.rat.audio.buffered
tool.rat.audio.delay
tool.rat.audio.skew
tool.rat.bps.in
tool.rat.bps.out
tool.rat.codec
tool.rat.codec.details
tool.rat.converter
tool.rat.converters.add
tool.rat.converters.flush
tool.rat.echo.suppress
tool.rat.format.in
tool.rat.lecture
tool.rat.lecture.mode
tool.rat.loopback
tool.rat.playout.limit
tool.rat.playout.max
tool.rat.playout.min
tool.rat.powermeter
tool.rat.powermeter
tool.rat.rate
tool.rat.repairs.add
tool.rat.repairs.flush
tool.rat.sampling.supported
tool.rat.settings
tool.rat.silence
tool.rat.spike.events
tool.rat.spike.toged
tool.rat.ui.detach.request

